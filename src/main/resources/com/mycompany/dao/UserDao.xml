<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.mycompany.dao.UserDao">

       <!--  实体类和数据库表中的字段名不匹配-->
    <resultMap id="userMap" type="com.mycompany.domain.User2">
        <!--主键字段的对应-->
        <id property="userID" column="id"></id>
        <result property="userName" column="username"></result>
        <result property="userAge" column="age"></result>
        <result property="userPhone" column="phone"></result>
        <result property="userAddress" column="address"></result>
    </resultMap>
    <!--    映射配置文件-->
    <!-- 查询所有-->
    <!--   <select id="findAll" resultMap="userMap"></select>-->
    <select  id="findAll"  resultMap="userMap">  /*方法名称  和要封装的对象*/
      select username,age ,phone  ,address   from user;
    </select>
<!--    保存用户信息-->
    <select id="saveUser"  parameterType="User">
        insert into user(username,age,phone,address) values(#{username},#{age},#{phone},#{address});
    </select>

<!--    根据id删除用户信息-->
    <delete id="deleteUser" parameterType="int">
    DELETE  from user  where id=#{xxx};
    </delete>

<!--    修改用户信息-->
<select id="updateUser" parameterType="User" >
    update  user set  username=#{username},age=#{age},phone=#{phone},address=#{address} where id=#{id};
</select>

<!--    条件查询-->
    <select id="findByvo" parameterType="Queryvo" resultType="user">

    select *from  user where  username= #{user.username} and age=#{user.age};


    </select>

<!--    条件查询-->
    <select id="findByusernameAndAge" resultType="User">

       select*from user  where  username like #{username}  and age=#{age}

    <!--  select*from user  where  username=#{arg0}  and age=#{arg1} -->

    </select>


    <select id="findToTal" resultType="int">

        select count(*) user where username like #{username} and  age=#{age};

    </select>








</mapper>